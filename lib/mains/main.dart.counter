import 'package:flutter/material.dart';

void main() {
  runApp(const App());
}

class App extends StatefulWidget {
  const App({super.key});

  @override
  State<App> createState() => _AppState();
}

class _AppState extends State<App> {
  int counter = 0;
  bool isShow = true;

  void onClicked() {
    setState(() => counter++);
  }

  void toggleShow() {
    setState(() => isShow = !isShow);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
        textTheme: const TextTheme(
          titleLarge: TextStyle(
            fontSize: 40,
            color: Colors.red,
          ),
        ),
      ),
      home: Scaffold(
        body: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              isShow ? Counter() : const LargeTitle(),
              IconButton(
                  onPressed: toggleShow,
                  icon: const Icon(Icons.remove_red_eye_rounded))
            ],
          ),
        ),
      ),
    );
  }

  Column Counter() {
    return Column(
      mainAxisAlignment: MainAxisAlignment.center,
      children: [
        const Text(
          "Counter",
          style: TextStyle(
            fontSize: 30,
          ),
        ),
        Text(
          "$counter",
          style: const TextStyle(
            fontSize: 30,
          ),
        ),
        IconButton(
          iconSize: 30,
          onPressed: onClicked,
          icon: const Icon(
            Icons.add_box,
          ),
        )
      ],
    );
  }
}

class LargeTitle extends StatefulWidget {
  const LargeTitle({
    super.key,
  });

  @override
  State<LargeTitle> createState() => _LargeTitleState();
}

class _LargeTitleState extends State<LargeTitle> {
  @override
  void initState() {
    print("initState");
    super.initState();
  }

  @override
  void dispose() {
    print("disposeState");
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Text(
      "Not Show",
      style: TextStyle(
        color: Theme.of(context).textTheme.titleLarge?.color,
        fontSize: Theme.of(context).textTheme.titleLarge?.fontSize,
      ),
    );
  }
}
